unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)  %>% ungroup()
iris %>% group_by(Species) %>% do(data = (.))
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)  %>%
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
names( x )
} )
str( x )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
str( x )
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
summary(x)
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x[1]
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x[[1]]
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
as.data.frame(x[[1]] )
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x$Species
} )
iris %>% group_by(Species) %>% do(data = (.))   %>%
unlist(.,recursive = FALSE)   %>%
purrr::map_df( .f = function(x) {
x
} )
iris %>% group_by(Species) %>% do(data = list(.)  )
iris %>% group_by(Species) %>% do(data = list(.)  ) %>% unlist()
iris %>% group_by(Species) %>% do(data = list(.)  ) %>% unnest()
iris %>% group_by(Species) %>% do(data = list(.)  )
df %>% group_by(V1) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data[[]] )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data[[1]] )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data[[1]])
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x$data[[]])
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) x )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) "[[" )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity) %>% map( .f = function(x) "[" )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = function(x) list(.)  )
unlist(.,recursive = FALSE)   %>%
purrr::map( .f = function(x) {
x
} )
iris %>% group_by(Species) %>% do(data = function(x) list(.)  )
unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = function(x) list(.)  ) %>%
unlist(.,recursive = FALSE)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.))
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data)
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.))  %>% map(identity)
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = x )
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = . )
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) x  )
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) x  )  %>% bind_rows()
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) x  )  %>% bind_rows()   %>% unnest()
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) { x[,1] <- x[,1]+100  )  %>% bind_rows()   %>% unnest()
iris %>% group_by(Species) %>% do(data = function(x) list(.)  ) %>%
unlist(.,recursive = FALSE)
purrr::map( .f = function(x) {
x
} )
%>% map(identity)
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) { x[,1] <- x[,1]+100  )
iris %>% group_by(Species) %>% do(data = (.))  %>% map( .f = function(x) { x[,1] <- x[,1]+100 } )  %>% bind_rows()   %>% unnest()
iris[, "Sepal.Width" ]
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten()
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>% flatten()
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x) class(x) )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x) (x) )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x)  print(x) )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x)  print(x[,1]) )
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x)  print(x[,"Sepal.Length"]) )
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% unlist( recursive = FALSE) %>%
flatten() %>%
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>% map(identity) %>% flatten() %>%
iris %>% group_by(Species) %>% do(data = (.)) %>% select(data) %>% map(identity)  %>% flatten() %>%
map( .f = function(x)  print(x[,"Sepal.Length"]) )
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>% map(identity) %>% flatten() %>%
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) )  %>% flatten() %>%
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) )  %>% map(identity) %>% flatten() %>%
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
class(x)
# names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
# x[,-1]
x
}
)
# %>%
#  Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
}
)
%>%
Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
}
)  %>%
Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
out1_list
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
}
)
# %>%
#   Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x
}
)
# %>%
#   Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("cyl", "gear"), "am")
freq_function_by_group( mtcars, c("am", "gear"), "cyl")
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>% class()
freq_function_by_group( mtcars, c("am", "gear"), "cyl")
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( full_join, .)
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" ))  )
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( function(x,y)  full_join( x[,-1], y[,-1],  by = c("variable", "category" )), . )
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x[,-1]
}
)
# %>%
#   Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function_by_group( mtcars, c("am", "gear"), "cyl")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function_by_group( diamonds, c("color", "cut"), "group_bar")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function_by_group( diamonds, c("color", "cut"), "group_var")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function <- function( dataset, var_vektor ) {
inner_function <- function(dataset, var) {
var_symbol <-  rlang::sym(var)
dataset %>%
count( UQ( var_symbol )) %>%
transmute(
pct = paste0( round( 100 * n / sum(n)), "%" ),
n = formatC( n, big.mark = " "),
variable = var,
category = UQ( var_symbol ) )  %>%
select(variable, category, pct, n )
}
var_vektor %>%
map(  function(x) inner_function(dataset, x) )    %>%
bind_rows()
}
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x[,-1]
}
)
freq_function <- function( dataset, var_vektor ) {
inner_function <- function(dataset, var) {
var_symbol <-  rlang::sym(var)
dataset %>%
count( UQ( var_symbol )) %>%
transmute(
pct = paste0( round( 100 * n / sum(n)), "%" ),
n = formatC( n, big.mark = " "),
variable = var,
category = UQ( var_symbol ) )  %>%
select(variable, category, pct, n )
}
var_vektor %>%
map(  function(x) inner_function(dataset, x) )    %>%
bind_rows()
}
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x[,-1]
}
)
# %>%
#   Reduce( function(x,y) dplyr::full_join( x,y, by = c("variable", "category")), . )
}
freq_function_by_group( diamonds, c("color", "cut"), "group_var")    %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x[,-1]
}
) %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
}
freq_function_by_group( diamonds, c("color", "cut"), "group_var")
freq_function( diamonds, c("cut", "color" ))
freq_function( diamonds, c("cut", "color" ))
freq_function_by_group( diamonds, c("cut", "color"), "group_var")
library(tidyverse)
diamonds <- diamonds %>% mutate(  group_var = sample( x = c("G1", "G2", "G3" ), size = n(),  replace = TRUE))
freq_function <- function( dataset, var_vektor ) {
inner_function <- function(dataset, var) {
var_symbol <-  rlang::sym(var)
dataset %>%
count( UQ( var_symbol )) %>%
transmute(
pct = paste0( round( 100 * n / sum(n)), "%" ),
n = formatC( n, big.mark = " "),
variable = var,
category = UQ( var_symbol ) )  %>%
select(variable, category, pct, n )
}
var_vektor %>%
map(  function(x) inner_function(dataset, x) )    %>%
bind_rows()
}
freq_function( diamonds, c("cut", "color" ))
freq_function_by_group <- function( dataset, var_vektor, by_group ) {
by_group_symbol <- rlang::sym(by_group)
dataset %>%
group_by( UQ(by_group_symbol) ) %>%
do( "by_group_var" = freq_function(., var_vektor))  %>%  unnest  %>%
group_by( UQ(by_group_symbol)) %>%
do( data = (.) ) %>% select(data) %>%  flatten() %>%
purrr::map( ., .f = function(x)  {
names(x)[ names(x) %in% c("pct", "n") ] <- paste0( names(x)[ names(x) %in% c( "pct", "n" ) ], "_", x[1,1] )
x[,-1]
}
) %>%
Reduce( function(x,y)  full_join( x, y,  by = c("variable", "category" )), . )
}
freq_function( diamonds, c("cut", "color" ))
freq_function_by_group( diamonds, c("cut", "color"), "group_var")
freq_function_by_group( mtcars, c("am", "gear"), "cyl")
library(htmlTable)
freq_function_by_group( diamonds, c("cut", "color"), "group_var")    %>%
freq_function_by_group( diamonds, c("cut", "color"), "group_var")   -> out
out
freq_function_by_group( diamonds, c("cut", "color"), "group_var")   -> out
out
library(tidyverse)
library(htmlTable)
diamonds <- diamonds %>% mutate(  group_var = sample( x = c("G1", "G2", "G3" ), size = n(),  replace = TRUE))
htmlTable::htmlTable(  x = out, rnames = FALSE )
knitr::kable(out1)
knitr::kable(out)
install.packages("kableExtra")
library(kableExtra)
dt <- mtcars[1:5, 1:4]
# HTML table
kable(dt, format = "html", caption = "Demo Table") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c(" ", "Group 1" = 2, "Group 2[note]" = 2)) %>%
add_footnote(c("table footnote"))
library(knitr)
dt <- mtcars[1:5, 1:4]
kable(dt, format = "html", caption = "Demo Table") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c(" ", "Group 1" = 2, "Group 2[note]" = 2)) %>%
add_footnote(c("table footnote"))
kable( out)
kable( out, format = "html") %>%
add_header_above( c" ", "G1" = 2, "G2" = 2, "G3" = 2 )
kable( out, format = "html") %>%
add_header_above( c( " ", "G1" = 2, "G2" = 2, "G3" = 2 ) )
kable( out, format = "html") %>%
add_header_above( c( " " = 2, "G1" = 2, "G2" = 2, "G3" = 2 ) )
htmlTable( x =  out1, rnames = FALSE )
htmlTable( x =  out, rnames = FALSE )
head(out)
htmlTable( x =  out, rnames = FALSE,
cgroup = c(" ", "G1", "G2", "G3"))
htmlTable( x =  out, rnames = FALSE,
cgroup = c(" ", "G1", "G2", "G3"),
n.cgroup = 2)
rep(2, 4)
htmlTable( x =  out, rnames = FALSE,
cgroup = c(" ", "G1", "G2", "G3"),
n.cgroup = rep(2, 4) )
