align      = c("l","r"),
css.rgroup = css_rgroup,
css.cell   = css_matrix,
css.table  = font_css,
cgroup     = cgroup_names,
n.cgroup   = n_cgroup_names
) -> output_htmltable
output_htmltable
}
# combine functions -------------------------------------------------------
# if no multivariate_models_list is provided
if ( rlang::is_null(multivariate_models_list) ) {
if ( rlang::is_null(cgroup_names)) {
cgroup_names <- " "
n_cgroup <- 3
} else {
n_cgroup <- 3
}
univariate_models_list %>%
purrr::map( model_gets_ref_levels            ) %>%
purrr::map( model_gets_formatted_numbers     ) %>% bind_rows() %>%
model_becomes_html()
} else if ( rlang::is_list(multivariate_models_list)) {
if( rlang::is_null(cgroup_names)) {
cgroup_names    <- c(" ", "Univariate models", paste0( "Model ", 1:( ( ncol(tidy_model) - 4 )/2 ) ) )
n_cgroup_names  <- c(1, rep(2, times = length(cgroup_names)-1 ))
} else if ( !rlang::is_null(cgroup_names)) {
n_cgroup_names  <- c(1, rep(2, times = length(cgroup_names)-1 ))
}
univariate_models_list %>%
purrr::map( model_gets_ref_levels            ) %>%
purrr::map( model_gets_formatted_numbers     ) %>% bind_rows() -> left_column
multivariate_models_list %>%
purrr::map( model_gets_ref_levels            )  %>%
purrr::map( model_gets_formatted_numbers     )  %>%
Reduce(function(x, y)
dplyr::full_join(x, y,  by = c( "variables", "categories" )), .) -> right_column
dplyr::left_join(left_column, right_column, by = c("variables", "categories")) %>%
model_becomes_html()
}
# html_table_output[[1]]
}
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_becomes_html           <- function( tidy_model        ) {
# tidy_model <- htmloutput # delete me
# cgroup_names <- " " # delete me
# n_cgroup     <- 3 # delete me
# font_css     <- "font-family: monospace;" # delete me
rgroup_vector       <-   stringr::str_to_title( rle(tidy_model$variables)$values )
n_rgroup_vector     <-   rle(tidy_model$variables)$lengths
rgroup_vector[ n_rgroup_vector == 1 ]   <-  " " #"&nbsp;" # single rows dont need rgroup header
css_rgroup      <- "font-style: italic;padding-top: 0.4cm;padding-right: 0.1cm;padding-bottom: 0.01cm;"
tidy_model      <- tidy_model[,-1]
css_matrix      <- matrix(data = "padding-left: 0.3cm; padding-right: 0.3cm;",
nrow = nrow(tidy_model),
ncol = ncol(tidy_model))
css_matrix[, 1] <- "padding-left: 0.3cm; padding-right: 0.3cm;"
names(tidy_model)[  names(tidy_model)=="categories"] <- "&nbsp;"
htmlTable::htmlTable(
x          = tidy_model ,
rnames     = FALSE,
rgroup     = rgroup_vector,
n.rgroup   = n_rgroup_vector,
align      = c("l","r"),
css.rgroup = css_rgroup,
css.cell   = css_matrix,
css.table  = font_css,
cgroup     = cgroup_names,
n.cgroup   = n_cgroup_names
) -> output_htmltable
output_htmltable
}
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = FALSE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
names(htmloutput)
stringr::str_replace( names(htmloutput), "\\..*", "" )
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = FALSE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = FALSE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = FALSE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
model_becomes_html           <- function( tidy_model        ) {
print(" here ? inside html? ")
# tidy_model <- htmloutput # delete me
# cgroup_names <- " " # delete me
# n_cgroup     <- 3 # delete me
# font_css     <- "font-family: monospace;" # delete me
rgroup_vector       <-   stringr::str_to_title( rle(tidy_model$variables)$values )
n_rgroup_vector     <-   rle(tidy_model$variables)$lengths
rgroup_vector[ n_rgroup_vector == 1 ]   <-  "&nbsp;" # single rows dont need rgroup header
css_rgroup      <- "font-style: italic;padding-top: 0.4cm;padding-right: 0.1cm;padding-bottom: 0.01cm;"
tidy_model      <- tidy_model[,-1]
css_matrix      <- matrix(data = "padding-left: 0.3cm; padding-right: 0.3cm;",
nrow = nrow(tidy_model),
ncol = ncol(tidy_model))
css_matrix[, 1] <- "padding-left: 0.3cm; padding-right: 0.3cm;"
names(tidy_model)[  names(tidy_model)=="categories"] <- "&nbsp;"
names(tidy_model) <- stringr::str_replace( names(tidy_model), "\\..*", "" )
htmlTable::htmlTable(
x          = tidy_model ,
rnames     = FALSE,
rgroup     = rgroup_vector,
n.rgroup   = n_rgroup_vector,
align      = c("l","r"),
css.rgroup = css_rgroup,
css.cell   = css_matrix,
css.table  = font_css,
cgroup     = cgroup_names,
n.cgroup   = n_cgroup_names
) -> output_htmltable
output_htmltable
}
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
n_cgroup_names <- NULL
n_cgroup <- NULL
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL, html_output = TRUE,
exponentiate = TRUE, decimals_estimate = 2 ) -> htmloutput
htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = NULL,
exponentiate = TRUE ) -> htmloutput
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE ) -> htmloutput
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
library(epitable)
devtools::check()
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(univariate_models_list = model1,
exponentiate = TRUE ) -> htmloutput
htmloutput
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(model1, exponentiate = TRUE )
remove.packages("epitable")
library(epitable)
### Test 1
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(univariate_models_list = model1,
exponentiate = TRUE ) -> htmloutput
library(epitable)
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(model1, exponentiate = TRUE )
library(epitable)
library(epitable)
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(model1, exponentiate = TRUE )
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(univariate_models_list = model1,
exponentiate = TRUE ) -> htmloutput
c("Age" , "Embarked" , "Sex" , "Fare" , "Pclass") %>%
paste0( "Survived ~ ", . ) %>%
purrr::map( ~ glm( as.formula(.), data = titanic, family = "binomial" )) -> univar_list
# Check logistic regression: multivariate models in a list:
glm_logistic_1 <- glm( Survived ~  Age + Embarked, data = titanic, family = "binomial")
glm_logistic_2 <- glm( Survived ~  Age + Embarked + Sex + Fare, data = titanic, family = "binomial")
glm_logistic_3 <- glm( Survived ~  Age + Embarked + Sex + Fare + Pclass, data = titanic, family = "binomial")
multi_model_list <- list(glm_logistic_1, glm_logistic_2,  glm_logistic_3 )
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE ) -> htmloutput
univar_list
c("Age" , "Embarked" , "Sex" , "Fare" , "Pclass") %>%
paste0( "Survived ~ ", . ) %>%
purrr::map( ~ glm( as.formula(.), data = titanic, family = "binomial" )) -> univar_list
library(tidyverse)
c("Age" , "Embarked" , "Sex" , "Fare" , "Pclass") %>%
paste0( "Survived ~ ", . ) %>%
purrr::map( ~ glm( as.formula(.), data = titanic, family = "binomial" )) -> univar_list
univar_list
glm_logistic_1 <- glm( Survived ~  Age + Embarked, data = titanic, family = "binomial")
glm_logistic_2 <- glm( Survived ~  Age + Embarked + Sex + Fare, data = titanic, family = "binomial")
glm_logistic_3 <- glm( Survived ~  Age + Embarked + Sex + Fare + Pclass, data = titanic, family = "binomial")
multi_model_list <- list(glm_logistic_1, glm_logistic_2,  glm_logistic_3 )
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE ) -> htmloutput
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(model1, exponentiate = TRUE )
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE ) -> htmloutput
htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html(model1, exponentiate = TRUE )
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(model1, exponentiate = TRUE )
model_to_html(model1, exponentiate = TRUE )
model_to_html(model1, exponentiate = TRUE ) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
library(epitable)
glm_logistic <- glm( cut=="Ideal" ~  color + clarity + x , data = diamonds, family = "binomial")
model_to_html(glm_logistic, exponentiate = TRUE)
diamonds <- ggplot2::diamonds
diamonds$color <- factor(diamonds$color, ordered = FALSE)
diamonds$clarity <- factor(diamonds$clarity, ordered = FALSE)
glm_logistic <- glm( cut=="Ideal" ~  color + clarity + x , data = diamonds, family = "binomial")
model_to_html(glm_logistic, exponentiate = TRUE)
glm_linear <- glm( Sepal.Width ~  Petal.Width + Sepal.Length + Petal.Length +  Species, data = iris)
model_to_html(glm_linear, exponentiate = TRUE)
glm_linear <- glm( Sepal.Width ~  Petal.Width + Sepal.Length + Petal.Length +  Species, data = iris)
model_to_html(glm_linear)
model_to_html(glm_linear, html_output = FALSE)
library(epitable)
model_to_html(glm_linear, html_output = FALSE)
source('C:/Users/rahela/Desktop/epitable/R/model_to_html.R', echo=TRUE)
model_to_html(glm_linear, html_output = FALSE)
diamonds <- ggplot2::diamonds
diamonds$color <- factor(diamonds$color, ordered = FALSE)
diamonds$clarity <- factor(diamonds$clarity, ordered = FALSE)
glm_logistic <- glm( cut=="Ideal" ~  color + clarity + x , data = diamonds, family = "binomial")
glm_linear <- glm( Sepal.Width ~  Petal.Width + Sepal.Length + Petal.Length +  Species, data = iris)
model_to_html(glm_linear, html_output = FALSE)
library(dplyr)
model_to_html(glm_linear, html_output = FALSE)
model_to_html(glm_linear, html_output = TRUE)
c("Age" , "Embarked" , "Sex" , "Fare" , "Pclass") %>%
paste0( "Survived ~ ", . ) %>%
purrr::map( ~ glm( as.formula(.), data = titanic, family = "binomial" )) -> univar_list
# multivariate models in a list:
glm_logistic_1 <- glm( Survived ~  Age + Embarked, data = titanic, family = "binomial")
glm_logistic_2 <- glm( Survived ~  Age + Embarked + Sex + Fare, data = titanic, family = "binomial")
glm_logistic_3 <- glm( Survived ~  Age + Embarked + Sex + Fare + Pclass, data = titanic, family = "binomial")
multi_model_list <- list(glm_logistic_1, glm_logistic_2,  glm_logistic_3 )
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE )
model_to_html(univariate_models_list = univar_list,
multivariate_models_list = multi_model_list,
exponentiate = TRUE, html_output = FALSE )
df         <- survival::lung
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
model1      <- survival::coxph( survival::Surv( time = time, event = status==1) ~ age_bin + factor(sex) + ph_bin + wt.loss, data = df )
model_to_html(model1, exponentiate = TRUE )
df
head(df )
library(dplyr)
df         <- dplyr::as_tibble(survival::lung)
df
install.packages("rmdformats")
knitr::kable(cars)
knitr::kable( head(ggplot2::diamonds))
df <- cbind(df,df)
df <- cbind(df,df)
df
knitr::opts_chunk$set(echo = TRUE)
df <- ggplot2::diamonds
df <- cbind(df,df)
df
df <- head(ggplot2::diamonds )
df <- cbind(df,df)
df
knitr::kable(df ))
knitr::kable(df )
df <- cbind(df,df, df)
knitr::kable(df )
head(example_data)
df <- head(example_data)
df <- cbind(df,df,df,)
df <- cbind(df,df,df)
df
df <- head(example_data)
df <- cbind(df,df)
df
library(htmlTable( df  ))
2+2
2+2
countries <- c("Macedonia",
"Madagascar",
"Malawi",
"Malaysia",
"Maldives",
"Mali",
"Malta",
"Marshall Islands",
"Mauritania",
"Mauritius",
"Mexico",
"Micronesia",
"Moldova",
"Monaco",
"Mongolia",
"Montenegro",
"Morocci",
"Mozambique")
example_data$new_group <- sample( x =  countries, size = nrow(example_data), replace = TRUE)
freq_by(dataset = example_data, var_vector = c("color", "clarity"), by_group = "new_group", font_css = "font-family: Times" )
example_data$new_group <- factor( example_data$new_group)
freq_by(dataset = example_data, var_vector = c("color", "clarity"), by_group = "new_group", font_css = "font-family: Times" )
library(epitable)
2+2
roxygen2::roxygenise()
dim(titanic)
head(titanic)
roxygen2::roxygenise()
roxygen2::roxygenise()
lung
dplyr::tibble( lung )
dplyr::as_tibble( lung )
df <- dplyr::as_tibble( lung )
df
df         <- dplyr::as_tibble(survival::lung)
df$age_bin <- Hmisc::cut2( df$age, g = 5)
df$ph_bin  <- Hmisc::cut2( df$ph.karno, g = 5)
df$sex     <- factor( df$sex)
c( "inst", "time", "status", "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )
c( "inst",  "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )  %>%
paste0( " Surv( time, status==2) ~ ", . )
c( "inst",  "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )  %>%
paste0( " Surv( time, status==2) ~ ", . ) %>%
purrr::map( ~ coxph( as.formula(.), data = df )
)
c( "inst",  "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )  %>%
paste0( " Surv( time, status==2) ~ ", . ) %>%
purrr::map( ~ coxph( as.formula(.), data = df )) -> univariate_coxph_list
univariate_coxph_list
model_to_html( univariate_coxph_list)
model_to_html( univariate_coxph_list) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
library(broom)
broom::tidy( univariate_coxph_list[[1]] )
broom::glance( univariate_coxph_list[[1]] )
df         <- dplyr::as_tibble(survival::lung)
c( "inst",  "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )  %>%
paste0( " Surv( time, status==2) ~ ", . ) %>%
purrr::map( ~ coxph( as.formula(.), data = df )) -> univariate_coxph_list
univariate_coxph_list
coxph_model1 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex, df)
coxph_model2 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno, df)
coxph_model3 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + meal.cal, df)
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + meal.cal + wt.loss, df)
multivariate_coxph_list <- list( coxph_model1, coxph_model2, coxph_model3, coxph_model4)
multivariate_coxph_list
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno +  meal.cal + wt.loss, df)
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno + meal.cal + wt.loss, df)
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + meal.cal + pat.karno + wt.loss, df)
multivariate_coxph_list <- list( coxph_model1, coxph_model2, coxph_model3, coxph_model4)
model_to_html( univariate_coxph_list, multivariate_models_list = multivariate_coxph_list) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html( univariate_coxph_list, multivariate_models_list = multivariate_coxph_list, decimals_estimate = 3) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
broom::tidy( coxph_model4)
coxph_model1 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex, df)
coxph_model2 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno, df)
coxph_model3 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno, df)
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno + meal.cal + wt.loss, df)
multivariate_coxph_list <- list( coxph_model1, coxph_model2, coxph_model3, coxph_model4 )
model_to_html( univariate_coxph_list, multivariate_models_list = multivariate_coxph_list, decimals_estimate = 3) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
model_to_html( univariate_coxph_list, multivariate_models_list = multivariate_coxph_list, decimals_estimate = 4) -> htmloutput
tempfile <- tempfile(pattern = "file", tmpdir = tempdir(), fileext = ".html")
readr::write_file( htmloutput[[1]], tempfile)
utils::browseURL(tempfile)
lung <- survival::lung
c( "inst",  "age", "sex", "ph.ecog", "ph.karno", "pat.karno", "meal.cal", "wt.loss" )  %>%
paste0( " Surv( time, status==2) ~ ", . ) %>%
purrr::map( ~ coxph( as.formula(.), data = lung )) -> univariate_coxph_list
coxph_model1 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex, lung)
coxph_model2 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno, lung)
coxph_model3 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno, lung)
coxph_model4 <- survival::coxph( survival::Surv( time, status==2) ~ inst + age + sex + ph.ecog + ph.karno + pat.karno + meal.cal + wt.loss, lung)
multivariate_coxph_list <- list( coxph_model1, coxph_model2, coxph_model3, coxph_model4 )
model_to_html( univariate_coxph_list, multivariate_models_list = multivariate_coxph_list, font_css = "font-family: Times;" )
